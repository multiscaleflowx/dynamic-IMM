# 3D LJ Poiseuille flow simulation

read_restart restart_@id.lmp

units		real
dimension	3
boundary	p p p

neighbor	0.3 bin
neigh_modify	delay 5

variable	chnl_ht equal @h
variable	num_lat_wall_Y equal 2
variable	chnl_Y_coord equal ${chnl_ht}+${num_lat_wall_Y}
variable	dom_upper_limt equal ${chnl_Y_coord}+${num_lat_wall_Y}
variable	liq_upper_lim equal ${chnl_Y_coord}-1

# create geometry

lattice		fcc 4.0	
region		domain block 0 @l 0 ${dom_upper_limt} 0 @w

region		box1 block 0 @l 3 ${liq_upper_lim} 0 @w

region		box2 block 0 @l 0 ${num_lat_wall_Y} 0 @w

region		box3 block 0 @l ${chnl_Y_coord} ${dom_upper_limt} 0 @w

mass		1 1.0
mass		2 1.0
mass		3 1.0

# LJ potentials

pair_style	lj/cut 1.0
pair_coeff	* * 1.0 1.0 1.0

# define groups

region		1 block INF INF INF ${num_lat_wall_Y} INF INF
group		lower region 1
region		2 block INF INF ${chnl_Y_coord} INF INF INF
group		upper region 2
group		boundary union lower upper
group		liquid subtract all boundary

set		group lower type 2
set		group upper type 3

# temperature settings

compute	        mobile liquid temp
velocity	liquid create 1.0 100 temp mobile
fix		1 all nve
fix		2 liquid temp/rescale 200 1.0 2.0 0.02 1.0
fix_modify	2 temp mobile

# Poiseuille flow
variable        force internal 0.0

velocity	boundary set 0.0 0.0 0.0
fix		4 lower setforce 0.0 0.0 0.0
fix		5 upper setforce 0.0 0.0 0.0
fix		6 liquid addforce v_force 0.0 0.0

# Compute total momentum
compute	        total_mom liquid momentum
# Compute mass flow rate in x
variable        mass_flow_x equal "c_total_mom[1]/lx"

# Run

timestep	0.002
thermo		500
thermo_modify   temp mobile

variable        shutdown internal 0
variable        communicate internal 1
variable        force internal @f
fix		cfd all mui/connect md@id @id
fix		push_mass_flow all mui/push cfd @id PARAM mass_flow_x mass_flow_x EVERY @nevery
fix		fetchforce all mui/fetch_param cfd @id force force EVERY  @nevery
fix		terminate all mui/shutdown EVERY @nevery
fix             halt all halt @nevery v_shutdown > 0 error soft

reset_timestep  @t

variable        a loop 0 @niterM1
label		iterative_solve

print "1: start of iteration $a."

# Equilibration

print "1: trying to set force."

fix             body_force all setforce v_force 0.0 0.0

variable	communicate delete
variable	communicate internal 0
print "1: start equilibration run$a."
run		@nequib
variable	communicate delete

# Measurement

variable	communicate delete
variable	communicate internal 1
print "1: start measurement run$a."
run		@nsteps

next		a
jump		SELF iterative_solve
