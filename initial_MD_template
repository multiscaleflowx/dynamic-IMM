# 3D LJ Poiseuille flow simulation

units		real
dimension	3
boundary	p p p

atom_style	atomic
neighbor	2.0 bin
neigh_modify	every 1 delay 5 check yes

variable	chnl_ht equal @h/2.15
variable num_lat_wall_Y equal 3
variable chnl_Y_coord equal ${chnl_ht}+${num_lat_wall_Y}
variable dom_upper_limt equal ${chnl_Y_coord}+${num_lat_wall_Y}+1
variable liq_upper_lim equal ${chnl_Y_coord}-1
variable liq_lower_lim equal ${num_lat_wall_Y}+1

# create geometry

lattice		sc 2.15	
region		domain block 0 @l 0 ${dom_upper_limt} 0 @w
create_box	3 domain

region		box1 block 0 @l ${liq_lower_lim} ${liq_upper_lim} 0 @w
create_atoms	1 random @N 123 box1

region		box2 block 0 @l 0 ${num_lat_wall_Y} 0 @w  
create_atoms	2 region box2

region		box3 block 0 @l ${chnl_Y_coord} ${dom_upper_limt} 0 @w  
create_atoms	3 region box3

mass		1 39.948
mass		2 39.948
mass		3 39.948

# potentials

pair_style      lj/cut 13.6
pair_coeff	* * 0.2385 3.4


# define groups

group           liquid type 1
group           lower type 2
group           upper type 3
group	        boundary union lower upper
# minimization

fix		1 lower setforce 0.0 0.0 0.0
fix		2 upper setforce 0.0 0.0 0.0

minimize        0.0 1.0e-8 1000 100000

# temperature settings

# velocity	liquid create 1.0 100 temp mobile
fix			3 liquid temp/berendsen 292.8 292.8 100.0
fix			4 liquid nve
compute tempMobile liquid temp/com
fix_modify 3 temp tempMobile

# Poiseuille flow

#variable        force internal 0.0
velocity	boundary set 0.0 0.0 0.0
#fix		6 liquid addforce 0.0 0.0 0.0

# Compute total momentum
compute	        total_mom liquid momentum
# Compute mass flow rate in x
variable        mass_flow_x equal "c_total_mom[1]/lx"

# Run

timestep	0.002
thermo		5
#thermo_modify   temp mobile

variable        shutdown internal 0
variable        force internal @f
fix             body_force liquid mui/addforce v_force 0.0 0.0 every @nevery
fix		cfd all mui/connect md@id @id
fix		push_mass_flow all mui/push cfd @id PARAM mass_flow_x mass_flow_x EVERY @nevery
fix		fetchforce all mui/fetch_param cfd @id force force EVERY  @nevery
fix		terminate all mui/shutdown EVERY @nevery
fix             halt all halt @nevery v_shutdown > 0 error soft

reset_timestep  @t

variable	step equal @t
fix extra all print 1 "@id: at step ${step} v_force is ${force}"

variable        a loop 0 @niterM1
label		  iterative_solve

print "@id: start of iteration $a."

# Equilibration

print "@id: start equilibration run$a."
run   	    @nequib every 1 "variable step equal ${step}+1"

# Measurement
dump            1 all custom 1 @id.lammpstrj id type x y z

print "@id: start measurement run$a."
print "@id: v_force is ${force} before measurement run. XXX"
run   	    @nsteps every 1 "variable step equal ${step}+1"
print "@id: v_force is ${force} after measurement run. XXX"

undump          1
next			a
jump				SELF iterative_solve
